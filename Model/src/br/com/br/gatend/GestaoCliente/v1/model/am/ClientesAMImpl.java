package br.com.br.gatend.GestaoCliente.v1.model.am;


import br.com.br.gatend.GestaoCliente.v1.model.am.common.ClientesAM;
import br.com.br.gatend.GestaoCliente.v1.model.to.DadosClienteTO;
import br.com.br.gatend.GestaoCliente.v1.model.vo.ArLocationValuesVImpl;
import br.com.br.gatend.GestaoCliente.v1.model.vo.ConsultaClientesVOImpl;
import br.com.br.gatend.GestaoCliente.v1.model.vo.FndLookUpValuesVLU707GcOrigemClienteVVOImpl;
import br.com.br.gatend.GestaoCliente.v1.model.vo.FndLookUpValuesVLU707GcPerfilClienteVVOImpl;
import br.com.br.gatend.GestaoCliente.v1.model.vo.ListaChecklistVOImpl;
import br.com.br.gatend.GestaoCliente.v1.model.vo.U536BrRolesMenuVVOImpl;
import br.com.br.gatend.GestaoCliente.v1.model.vo.U536BrRolesMenuVVORowImpl;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpSession;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 03 15:39:54 BRT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ClientesAMImpl extends ApplicationModuleImpl implements ClientesAM {


    public ClientesAMImpl() {
    }

    /**
     * This is the default constructor (do not remove).
     */

    private static String ROLE_GESTAO_CLIENTE = "Role Gestão de Clientes";
    private DadosClienteTO dados;


    /**
     * Method responsible for turning on Object Text
     *
     * @param objeto
     * @return String object
     */
    public static String parseTexto(Object objeto) {
        String texto = "";
        try {
            if (objeto != null) {
                texto = objeto.toString();
            }
        } catch (Exception e) {
            return "";
        }
        return texto;
    }
    
    public String localizarPaisCliente(Map parametros) {
        String pais = "";
        ArLocationValuesVImpl vo = this.getArLocationValuesV1();
        ViewCriteria viewCriteria = vo.getViewCriteria("ArLocationValuesVCriteria");
        vo.applyViewCriteria(viewCriteria);
        vo.setNamedWhereClauseParam("sigla", parseTexto(parametros.get("siglaPais")));
        vo.executeQuery();

        if (vo.getRowCount() > 0) {
            Row row = vo.getRowAtRangeIndex(0);
            pais = parseTexto(row.getAttribute("LocationSegmentDescription"));
        }

        return pais;
    }

    /**
     * Method responsible for locating clients from filter parameters
     *
     * @param parametros
     */
    public boolean localizarClientes(Map parametros) {
        ConsultaClientesVOImpl vo = this.getConsultaClientesVO1();
        vo.setWhereClause(filterConsultaCliente(parametros));
        vo.executeQuery();
        
        if(vo.getRowCount() <= 0) {
            return false;
        }
        
        return true;
    }
    
    public Map localizarClientePeloCodigoR3(Map parametros) {
        String codigoR3 = String.valueOf(parametros.get("codigoR3"));
        HttpSession session = (HttpSession) parametros.get("session");
        Map<String, Object> map = new HashMap<String, Object>();
        ConsultaClientesVOImpl vo = this.getConsultaClientesVO1();
        
        vo.setWhereClause("CODIGO_R3 = '"+codigoR3+"'");                                                          
        vo.executeQuery();
        if(vo.getRowCount() == 1) {
            Row row = vo.getCurrentRow();
            session.setAttribute("codigoR3", parseTexto(row.getAttribute("CodigoR3")));
            session.setAttribute("razaoSocial", parseTexto(row.getAttribute("RazaoSocial")));
            session.setAttribute("tipoCliente", parseTexto(row.getAttribute("TipoCliente")));
            session.setAttribute("logradouro", parseTexto(row.getAttribute("Logradouro")));
            session.setAttribute("bairro", parseTexto(row.getAttribute("Bairro")));
            session.setAttribute("cidade", parseTexto(row.getAttribute("Cidade")));
            session.setAttribute("estado", parseTexto(row.getAttribute("Estado")));
            session.setAttribute("origem", parseTexto(row.getAttribute("Origem")));
            session.setAttribute("perfil", parseTexto(row.getAttribute("Perfil")));
            session.setAttribute("principal", parseTexto(row.getAttribute("Principal")));
            session.setAttribute("quadra", parseTexto(row.getAttribute("Quadra")));
            session.setAttribute("lote", parseTexto(row.getAttribute("Lote")));
            session.setAttribute("numero", parseTexto(row.getAttribute("Numero")));
            session.setAttribute("complemento", parseTexto(row.getAttribute("Complemento")));
            session.setAttribute("cep", parseTexto(row.getAttribute("Cep")));
            session.setAttribute("pais", parseTexto(row.getAttribute("Pais")));
            session.setAttribute("partySiteId", parseTexto(row.getAttribute("PartySiteId")));
            map.put("session", session);
        }
        
        return map;
    }
       



    /**
     * Method responsible to assemble and execute the Query Guest filter
     *
     * @param parametros
     * @return String object
     */
    public String filterConsultaCliente(Map parametros) {
        String perfilChoice = (String) parametros.get("perfilChoice");
        String perfil = (String) parametros.get("perfil");
        String razaoChoice = (String) parametros.get("razaoSocialChoice");
        String razaoSocial = (String) parametros.get("razaoSocial");
        String tipoChoiceC = (String) parametros.get("tipoClienteChoice");
        String tipoCliente = (String) parametros.get("tipoCliente");
        String codR3Choice = (String) parametros.get("codigoR3Choice");
        String codigoR3 = (String) parametros.get("codigoR3");
        String bairroChoice = (String) parametros.get("bairroChoice");
        String bairroCliente = (String) parametros.get("bairroCliente");
        String cidadeChoice = (String) parametros.get("cidadeChoice");
        String cidadeCliente = (String) parametros.get("cidadeCliente");
        String enderecoChoice = (String) parametros.get("enderecoChoice");
        String enderecoCliente = (String) parametros.get("enderecoCliente");
        String estadoChoice = (String) parametros.get("estadoChoice");
        String estadoCliente = (String) parametros.get("estadoCliente");
        String origemChoice = (String) parametros.get("origemChoice");
        String origemCliente = (String) parametros.get("origemCliente");
        String principalChoice = (String) parametros.get("principalChoice");
        String principalCliente = (String) parametros.get("principalCliente");

        StringBuilder query = new StringBuilder();

        //Condições Igual a
        if (perfilChoice.equalsIgnoreCase("0")) {
            query.append(" PERFIL = '" + perfil + "'");
        }
        if (tipoChoiceC.equalsIgnoreCase("0") && !tipoCliente.isEmpty()) {
            query.append(" AND TIPO_CLIENTE LIKE '%" + tipoCliente + "%'");
        }
        if (razaoChoice.equalsIgnoreCase("0") && !razaoSocial.isEmpty()) {
            query.append(" AND RAZAO_SOCIAL LIKE '%" + razaoSocial.toUpperCase() + "%'");
        }
        if (codR3Choice.equalsIgnoreCase("0") && !codigoR3.isEmpty()) {
            query.append(" AND CODIGO_R3 LIKE '%" + codigoR3 + "%'");
        }
        if (parametros.containsKey("bairroChoice") && bairroChoice.equalsIgnoreCase("0")) {
            query.append(" AND BAIRRO LIKE '%" + bairroCliente.toUpperCase() + "%'");
        }
        if (parametros.containsKey("cidadeChoice") && cidadeChoice.equalsIgnoreCase("0")) {
            query.append(" AND CIDADE LIKE '%" + cidadeCliente.toUpperCase() + "%'");
        }
        if (parametros.containsKey("enderecoChoice") && enderecoChoice.equalsIgnoreCase("0")) {
            query.append(" AND ENDERECO LIKE '%" + enderecoCliente.toUpperCase() + "%'");
        }
        if (parametros.containsKey("estadoChoice") && estadoChoice.equalsIgnoreCase("0")) {
            query.append(" AND ESTADO LIKE '%" + estadoCliente.toUpperCase() + "%'");
        }
        if (parametros.containsKey("origemChoice") && origemChoice.equalsIgnoreCase("0")) {
            query.append(" AND ORIGEM LIKE '%" + origemCliente + "%'");
        }
        if (parametros.containsKey("principalChoice") && principalChoice.equalsIgnoreCase("0")) {
            query.append(" AND PRINCIPAL LIKE '%" + principalCliente + "%'");
        }

        //Condições Começa com
        if (tipoChoiceC.equalsIgnoreCase("1") && !tipoCliente.isEmpty()) {
            query.append(" AND TIPO_CLIENTE_BASICO LIKE '" + tipoCliente + "%'");
        }
        if (razaoChoice.equalsIgnoreCase("1") && !razaoSocial.isEmpty()) {
            query.append(" AND RAZAO_SOCIAL LIKE '" + razaoSocial.toUpperCase() + "%'");
        }
        if (codR3Choice.equalsIgnoreCase("1") && !codigoR3.isEmpty()) {
            query.append(" AND CODIGO_R3 LIKE '" + codigoR3 + "%'");
        }
        if (parametros.containsKey("bairroChoice") && bairroChoice.equalsIgnoreCase("1")) {
            query.append(" AND BAIRRO LIKE '" + bairroCliente.toUpperCase() + "%'");
        }
        if (parametros.containsKey("cidadeChoice") && cidadeChoice.equalsIgnoreCase("1")) {
            query.append(" AND CIDADE LIKE '" + cidadeCliente.toUpperCase() + "%'");
        }
        if (parametros.containsKey("enderecoChoice") && enderecoChoice.equalsIgnoreCase("1")) {
            query.append(" AND ENDERECO LIKE '" + enderecoCliente.toUpperCase() + "%'");
        }
        if (parametros.containsKey("estadoChoice") && estadoChoice.equalsIgnoreCase("1")) {
            query.append(" AND ESTADO LIKE '" + estadoCliente.toUpperCase() + "%'");
        }
        if (parametros.containsKey("origemChoice") && origemChoice.equalsIgnoreCase("1")) {
            query.append(" AND ORIGEM LIKE '" + origemCliente + "%'");
        }
        if (parametros.containsKey("principalChoice") && principalChoice.equalsIgnoreCase("1")) {
            query.append(" AND PRINCIPAL LIKE '" + principalCliente + "%'");
        }

        //Condições Termina com
        if (tipoChoiceC.equalsIgnoreCase("2") && !tipoCliente.isEmpty()) {
            query.append(" AND TIPO_CLIENTE_DIGITO LIKE '%" + tipoCliente + "'");
        }
        if (razaoChoice.equalsIgnoreCase("2") && !razaoSocial.isEmpty()) {
            query.append(" AND RAZAO_SOCIAL LIKE '%" + razaoSocial.toUpperCase() + "'");
        }
        if (codR3Choice.equalsIgnoreCase("2") && !codigoR3.isEmpty()) {
            query.append(" AND CODIGO_R3 LIKE '%" + codigoR3 + "'");
        }
        if (parametros.containsKey("bairroChoice") && bairroChoice.equalsIgnoreCase("2")) {
            query.append(" AND BAIRRO LIKE '%" + bairroCliente.toUpperCase() + "'");
        }
        if (parametros.containsKey("cidadeChoice") && cidadeChoice.equalsIgnoreCase("2")) {
            query.append(" AND CIDADE LIKE '%" + cidadeCliente.toUpperCase() + "'");
        }
        if (parametros.containsKey("enderecoChoice") && enderecoChoice.equalsIgnoreCase("2")) {
            query.append(" AND ENDERECO LIKE '%" + enderecoCliente.toUpperCase() + "'");
        }
        if (parametros.containsKey("estadoChoice") && estadoChoice.equalsIgnoreCase("2")) {
            query.append(" AND ESTADO LIKE '%" + estadoCliente.toUpperCase() + "'");
        }
        if (parametros.containsKey("origemChoice") && origemChoice.equalsIgnoreCase("2")) {
            query.append(" AND ORIGEM LIKE '%" + origemCliente + "'");
        }
        if (parametros.containsKey("principalChoice") && principalChoice.equalsIgnoreCase("2")) {
            query.append(" AND PRINCIPAL LIKE '%" + principalCliente + "'");
        }

        return query.toString();
    }

    /**
     * Method check the source responsible for user from the Role Access
     *
     * @return Boolean Object (true or false)
     */
    public boolean consultaOrigem() {
        FndLookUpValuesVLU707GcOrigemClienteVVOImpl vo = this.getFndLookUpValuesVLU707GcOrigemClienteVVO1();
        vo.executeQuery();

        while (vo.hasNext()) {
            U536BrRolesMenuVVORowImpl row = (U536BrRolesMenuVVORowImpl) vo.next();
            String roleUsuario = parseTexto(row.getAttribute("RoleName"));
            if (ROLE_GESTAO_CLIENTE.equalsIgnoreCase(roleUsuario)) {
                return true;
            }
        }
        return false;
    }

    /**
     * Container's getter for FndLookupValue1.
     * @return FndLookupValue1
     */
    public ViewObjectImpl getFndLookupValue1() {
        return (ViewObjectImpl) findViewObject("FndLookupValue1");
    }

    /**
     * Container's getter for ConsultaClientesVO1.
     * @return ConsultaClientesVO1
     */
    public ConsultaClientesVOImpl getConsultaClientesVO1() {
        return (ConsultaClientesVOImpl) findViewObject("ConsultaClientesVO1");
    }

    /**
     * Container's getter for OrigemVo1.
     * @return OrigemVo1
     */
    public ViewObjectImpl getOrigemVo1() {
        return (ViewObjectImpl) findViewObject("OrigemVo1");
    }

    /**
     * Container's getter for PrincipalVo1.
     * @return PrincipalVo1
     */
    public ViewObjectImpl getPrincipalVo1() {
        return (ViewObjectImpl) findViewObject("PrincipalVo1");
    }

    /**
     * Container's getter for FndLookUpValuesVLU707GcPerfilClienteVVO1.
     * @return FndLookUpValuesVLU707GcPerfilClienteVVO1
     */
    public FndLookUpValuesVLU707GcPerfilClienteVVOImpl getFndLookUpValuesVLU707GcPerfilClienteVVO1() {
        return (FndLookUpValuesVLU707GcPerfilClienteVVOImpl) findViewObject("FndLookUpValuesVLU707GcPerfilClienteVVO1");
    }


    /**
     * Container's getter for FndLookUpValuesVLU707GcOrigemClienteVVO1.
     * @return FndLookUpValuesVLU707GcOrigemClienteVVO1
     */
    public FndLookUpValuesVLU707GcOrigemClienteVVOImpl getFndLookUpValuesVLU707GcOrigemClienteVVO1() {
        return (FndLookUpValuesVLU707GcOrigemClienteVVOImpl) findViewObject("FndLookUpValuesVLU707GcOrigemClienteVVO1");
    }

    /**
     * Container's getter for U536BrRolesMenuVVO1.
     * @return U536BrRolesMenuVVO1
     */
    public U536BrRolesMenuVVOImpl getU536BrRolesMenuVVO1() {
        return (U536BrRolesMenuVVOImpl) findViewObject("U536BrRolesMenuVVO1");
    }
    
    
    @Override
    public boolean validaPrivilegioAcessoClientes(Map parametros) {
        
        U536BrRolesMenuVVOImpl vo = this.getU536BrRolesMenuVVO1();
        ViewCriteria viewCriteria = vo.getViewCriteria("VerificaPrivilegioCriteria");
        vo.applyViewCriteria(viewCriteria);
        vo.setNamedWhereClauseParam("chaveUsuario", parseTexto(parametros.get("chaveUsuario")));
        vo.executeQuery();
        
        try {
            if (vo.getRowCount() > 0) {
                Row row = vo.getRowAtRangeIndex(0);
                if(ROLE_GESTAO_CLIENTE.equalsIgnoreCase(parseTexto(row.getAttribute("RoleName")))) {
                    return true;
                }
            }
        } catch(Exception e) {
            return false;
        }

        return false;
    }

    /**
     * Container's getter for ArLocationValuesV1.
     * @return ArLocationValuesV1
     */
    public ArLocationValuesVImpl getArLocationValuesV1() {
        return (ArLocationValuesVImpl) findViewObject("ArLocationValuesV1");
    }

    /**
     * Container's getter for ListaChecklistVO1.
     * @return ListaChecklistVO1
     */
    public ListaChecklistVOImpl getListaChecklistVO1() {
        return (ListaChecklistVOImpl) findViewObject("ListaChecklistVO1");
    }

    /**
     * Container's getter for FndLookupGerDirVO1.
     * @return FndLookupGerDirVO1
     */
    public ViewObjectImpl getFndLookupGerDirVO1() {
        return (ViewObjectImpl) findViewObject("FndLookupGerDirVO1");
    }

    /**
     * Container's getter for FndFormaTratamentoVO1.
     * @return FndFormaTratamentoVO1
     */
    public ViewObjectImpl getFndFormaTratamentoVO1() {
        return (ViewObjectImpl) findViewObject("FndFormaTratamentoVO1");
    }
}

